{"version":3,"sources":["hooks/useToDoList.js","hooks/useLocalStorage.js","context/TodoContext.js","components/TodoItem.jsx","components/TodoCounter.jsx","components/TodoList.jsx","components/TodoSearch.jsx","components/CreateTodoButton.jsx","components/AddForm.jsx","modals/Modal.jsx","pages/App.jsx","index.js"],"names":["todos","id","text","isCompleted","useToDoList","name","initValue","localStorageTodo","localStorage","getItem","setItem","JSON","stringify","parsedTodo","parse","useState","item","newItem","useLocalStorage","todoList","saveTodos","openModal","setOpenModal","searchValue","setSearchValue","toggleTodo","payload","newList","find","todo","createTodo","uuidv4","push","deleteTodo","indexToDelete","findIndex","splice","TodoContext","createContext","TodoProvider","children","toDoList","Provider","value","TodoItem","props","useContext","onClick","TodoCounter","filter","length","TodoList","todoListFilter","toLowerCase","includes","map","index","TodoSearch","ref","useRef","placeholder","onChange","current","CreateTodoButton","prev","AddForm","newTodoRef","handleCloseModal","className","type","Modal","createPortal","document","getElementById","App","ReactDOM","render","StrictMode"],"mappings":"2OAIMA,EAAQ,CACZ,CAAEC,GAAG,EAAGC,KAAM,iBAAkBC,aAAa,GAC7C,CAAEF,GAAG,EAAGC,KAAM,kCAAmCC,aAAa,GAC9D,CAAEF,GAAG,EAAGC,KAAM,wBAAyBC,aAAa,IAGzCC,EAAc,WACzB,MCT6B,SAACC,EAAMC,GACpC,IAAMC,EAAmBC,aAAaC,QAAQJ,IAC7CE,GAAoBC,aAAaE,QAAQL,EAAMM,KAAKC,UAAUN,IAC/D,IAAMO,EAAaN,EAAmBI,KAAKG,MAAMP,GAAoB,GACrE,EAAwBQ,mBAASF,GAAjC,mBAAOG,EAAP,KAAaN,EAAb,KAOA,MAAO,CACLM,EANe,SAACC,GAChBT,aAAaE,QAAQL,EAAMM,KAAKC,UAAUK,IAC1CP,EAAQO,KDCsBC,CAAgB,UAAWlB,GAA3D,mBAAQmB,EAAR,KAAkBC,EAAlB,KACA,EAAoCL,qBAApC,mBAAQM,EAAR,KAAmBC,EAAnB,KACA,EAAsCP,mBAAS,IAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KAsBA,MAAO,CACHL,WACAI,cACAC,iBACAC,WAxBe,SAAAC,GACjB,IAAMC,EAAO,YAAOR,GACpBQ,EAAQC,MAAK,SAAAC,GAAI,OAAIA,EAAK5B,KAAOyB,EAAQzB,MAAIE,aAAeuB,EAAQvB,YACpEiB,EAAUO,IAsBRG,WAZe,SAAAJ,GACjB,IAAMzB,EAAK8B,cACLJ,EAAO,YAAOR,GACpBQ,EAAQK,KAAK,CAAC/B,KAAIC,KAAMwB,EAASvB,aAAa,IAC9CiB,EAAUO,IASRM,WApBe,SAAAP,GACjB,IAAMC,EAAO,YAAOR,GACde,EAAgBP,EAAQQ,WAAU,SAAAN,GAAI,OAAIA,EAAK5B,KAAOyB,KAC5DC,EAAQS,OAAOF,EAAe,GAC9Bd,EAAUO,IAiBRN,YACAC,iB,OExCOe,EAAcC,wBAAc,IAE5BC,EAAe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtBC,EAAWrC,IAEjB,OACE,cAACiC,EAAYK,SAAb,CAAsBC,MAAOF,EAA7B,SACKD,KCPII,G,MAAW,SAACC,GACrB,MAAiCC,qBAAWT,GAArCZ,EAAP,EAAOA,WAAYQ,EAAnB,EAAmBA,WACnB,OACI,+BACI,yBAAQc,QAAS,kBAAKtB,EAAWoB,IAAjC,cAA2CA,EAAM1C,YAAc,SAAM,OADzE,IACwF0C,EAAM3C,KAD9F,IACoG,wBAAQ6C,QAAS,kBAAKd,EAAWY,EAAM5C,KAAvC,sBCJ/F+C,EAAc,WACvB,IAAO7B,EAAY2B,qBAAWT,GAAvBlB,SACP,OACI,iDACoBA,EAAS8B,QAAO,SAAApB,GAAI,OAAIA,EAAK1B,eAAa+C,OAD9D,OAC0E/B,EAAS+B,OADnF,a,OCFKC,EAAW,WACpB,MAAgCL,qBAAWT,GAApClB,EAAP,EAAOA,SAAUI,EAAjB,EAAiBA,YACX6B,EAAiBjC,EAAS8B,QAAO,SAACpB,GAAD,OACnCA,EAAK3B,KAAKmD,cAAcC,SAAS/B,EAAY8B,kBAEjD,OAAID,EAAeF,OAKf,8BACI,6BACCE,EAAeG,KAAI,SAACvC,EAAMwC,GAAP,OAChB,cAAC,EAAD,eAA0BxC,GAAXwC,UAPhB,oDCPFC,EAAa,WACtB,MAAsCX,qBAAWT,GAA1Cd,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,eACdkC,EAAMC,iBAAO,IAInB,OACI,uBACAC,YAAY,OACZF,IAAKA,EACLf,MAAOpB,EACPsC,SARiB,WACjBrC,EAAekC,EAAII,QAAQnB,WCJtBoB,EAAmB,WAC5B,IAAQzC,EAAgBwB,qBAAWT,GAA3Bf,aAIR,OACI,wBAAQyB,QAJU,WAClBzB,GAAa,SAAA0C,GAAI,OAAKA,MAGtB,kBCLKC,G,MAAU,WACnB,IAAMC,EAAaP,iBAAO,IAC1B,EAAoCb,qBAAWT,GAAxCP,EAAP,EAAOA,WAAYR,EAAnB,EAAmBA,aACb6C,EAAmB,WACrB7C,GAAa,SAAA0C,GAAI,OAAKA,MAM1B,OACI,sBAAKI,UAAU,WAAf,UACI,+CACA,0BAAUC,KAAK,OAAOX,IAAKQ,IAC3B,wBAAQnB,QARS,WACrBjB,EAAWoC,EAAWJ,QAAQnB,OAC9BwB,KAMI,iBACA,wBAAQpB,QAASoB,EAAjB,yBCdCG,G,MAAQ,SAAC,GAAgB,IAAf9B,EAAc,EAAdA,SACZlB,EAAgBwB,qBAAWT,GAA3Bf,aACP,OAAOiD,uBACH,sBAAKH,UAAU,QAAf,UACI,iCACI,wBAAQrB,QAAS,kBAAIzB,GAAa,SAAA0C,GAAI,OAAKA,MAA3C,uBAIHxB,KAELgC,SAASC,eAAe,YCLnBC,EAAM,WACjB,IAAOrD,EAAayB,qBAAWT,GAAxBhB,UACP,OACE,qCACE,uCACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IAEEA,GAAa,cAAC,EAAD,UACX,cAAC,EAAD,UChBVsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJL,SAASC,eAAe,W","file":"static/js/main.53bee945.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst todos = [\r\n  { id:0, text: 'Cortar cebolla', isCompleted: true},\r\n  { id:1, text: 'Tomar el curso de intro a React', isCompleted: false},\r\n  { id:2, text: 'Llorar con la llorona', isCompleted: false},\r\n]\r\n\r\nexport const useToDoList = () => {\r\n  const [ todoList, saveTodos ] = useLocalStorage('TODO_V1', todos);\r\n  const [ openModal, setOpenModal ] = useState();\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const toggleTodo = payload => {\r\n    const newList = [...todoList];\r\n    newList.find(todo => todo.id === payload.id).isCompleted = !payload.isCompleted;\r\n    saveTodos(newList);\r\n  };\r\n\r\n  const deleteTodo = payload => {\r\n    const newList = [...todoList];\r\n    const indexToDelete = newList.findIndex(todo => todo.id === payload);\r\n    newList.splice(indexToDelete, 1);\r\n    saveTodos(newList);\r\n  }\r\n\r\n  const createTodo = payload => {\r\n    const id = uuidv4();\r\n    const newList = [...todoList];\r\n    newList.push({id, text: payload, isCompleted: false});\r\n    saveTodos(newList);\r\n  }\r\n\r\n  return {\r\n      todoList,\r\n      searchValue,\r\n      setSearchValue,\r\n      toggleTodo,\r\n      createTodo,\r\n      deleteTodo,\r\n      openModal,\r\n      setOpenModal\r\n  }\r\n}","import { useState } from \"react\";\r\n\r\nexport const useLocalStorage = (name, initValue) => {\r\n  const localStorageTodo = localStorage.getItem(name);\r\n  !localStorageTodo && localStorage.setItem(name, JSON.stringify(initValue));\r\n  const parsedTodo = localStorageTodo ? JSON.parse(localStorageTodo) : [];\r\n  const [item, setItem] = useState(parsedTodo);\r\n\r\n  const saveItem = (newItem) => {\r\n    localStorage.setItem(name, JSON.stringify(newItem));\r\n    setItem(newItem);\r\n  }\r\n\r\n  return [\r\n    item,\r\n    saveItem\r\n  ]\r\n}","import { createContext } from \"react\";\r\nimport { useToDoList } from '../hooks/useToDoList'\r\n\r\nexport const TodoContext = createContext({});\r\n\r\nexport const TodoProvider = ({children}) => {\r\n  const toDoList = useToDoList();\r\n    \r\n  return (\r\n    <TodoContext.Provider value={toDoList}>\r\n        {children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { TodoContext } from '../context/TodoContext'\r\n\r\nexport const TodoItem = (props ) => {\r\n    const {toggleTodo, deleteTodo} = useContext(TodoContext);\r\n    return (\r\n        <li>\r\n            <button onClick={()=> toggleTodo(props)}> {props.isCompleted ? 'âˆš' : 'X'}</button> {props.text} <button onClick={()=> deleteTodo(props.id)}> X </button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { TodoContext } from '../context/TodoContext'\r\n\r\nexport const TodoCounter = () => {\r\n    const {todoList} = useContext(TodoContext);\r\n    return (\r\n        <h2>\r\n            Has completado {todoList.filter(todo => todo.isCompleted).length} de {todoList.length} TODOs\r\n        </h2>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { TodoContext } from '../context/TodoContext';\r\nimport { TodoItem } from './TodoItem';\r\n\r\nexport const TodoList = () => {\r\n    const {todoList, searchValue} = useContext(TodoContext);\r\n    const todoListFilter = todoList.filter((todo) => \r\n        todo.text.toLowerCase().includes(searchValue.toLowerCase()));\r\n\r\n    if(!todoListFilter.length){\r\n        return <p>Crea un nuevo todo</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n            {todoListFilter.map((item, index)=>(\r\n                <TodoItem key={index} {...item}/>\r\n            ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useRef } from 'react'\r\nimport { TodoContext } from '../context/TodoContext';\r\n\r\nexport const TodoSearch = () => {\r\n    const {searchValue, setSearchValue} = useContext(TodoContext);\r\n    const ref = useRef('');\r\n    const handleSearch = () => {\r\n        setSearchValue(ref.current.value);\r\n    }\r\n    return (\r\n        <input \r\n        placeholder=\"Todo\"\r\n        ref={ref}\r\n        value={searchValue}\r\n        onChange={handleSearch}\r\n        />\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { TodoContext } from '../context/TodoContext';\r\n\r\nexport const CreateTodoButton = () => {\r\n    const { setOpenModal} = useContext(TodoContext);\r\n    const handleAddTodo = () => {\r\n        setOpenModal(prev => !prev)\r\n    }\r\n    return (\r\n        <button onClick={handleAddTodo}>\r\n            Add\r\n        </button >\r\n    )\r\n}\r\n","import React, { useContext, useRef } from 'react'\r\nimport { TodoContext } from '../context/TodoContext';\r\nimport '../styles/components/AddForm.css';\r\n\r\nexport const AddForm = () => {\r\n    const newTodoRef = useRef('');\r\n    const {createTodo, setOpenModal } = useContext(TodoContext);\r\n    const handleCloseModal = () => {\r\n        setOpenModal(prev => !prev);\r\n    }\r\n    const handleCreateTodo = () => {\r\n        createTodo(newTodoRef.current.value);\r\n        handleCloseModal();\r\n    }\r\n    return (\r\n        <div className=\"add-todo\">\r\n            <h3>Add your TODO</h3>\r\n            <textarea type=\"text\" ref={newTodoRef} />\r\n            <button onClick={handleCreateTodo}>Add</button>\r\n            <button onClick={handleCloseModal} >Cancel</button>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext } from 'react';\r\nimport { createPortal } from 'react-dom'\r\nimport { TodoContext } from '../context/TodoContext';\r\nimport '../styles/modals/Modal.css'\r\n\r\nexport const Modal = ({children}) => {\r\n    const {setOpenModal} = useContext(TodoContext);\r\n    return createPortal(\r\n        <div className=\"modal\">\r\n            <header>\r\n                <button onClick={()=>setOpenModal(prev => !prev)}>\r\n                    Close X\r\n                </button>\r\n            </header>\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    );\r\n}","import { useContext } from 'react';\nimport {\n  TodoCounter,\n  TodoList,\n  TodoSearch,\n  CreateTodoButton\n} from '../components';\nimport { AddForm } from '../components/AddForm';\nimport { TodoContext } from '../context/TodoContext';\nimport { Modal } from '../modals/Modal';\n\nexport const App = () => {\n  const {openModal} = useContext(TodoContext);\n  return (\n    <>\n      <h1>TODO </h1>\n      <TodoCounter />\n      <TodoSearch />\n      <TodoList/>\n      <CreateTodoButton />\n      {\n        openModal && <Modal>\n          <AddForm />\n        </Modal>\n      }\n   \n  </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoProvider } from './context/TodoContext';\nimport './index.css';\nimport { App } from './pages/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoProvider>\n      <App />\n    </TodoProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}